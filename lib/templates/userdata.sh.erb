#!/bin/bash

BUCKET=<%= recordings_bucket %>
STORAGE=<%= recordings_path %>
AWS_CREDENTIALS=<%= aws_credentials %>

mkdir -p $STORAGE
chmod 2777 $STORAGE

if [ -f /sys/hypervisor/uuid ] && [ `head -c 3 /sys/hypervisor/uuid` == ec2 ]; then

  PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

  # mount the bucket
  echo $AWS_CREDENTIALS > ~/.passwd-s3fs
  chmod 600 ~/.passwd-s3fs
  /usr/local/bin/s3fs $BUCKET $STORAGE -o allow_other
else

  PUBLIC_IP=`hostname -I | cut -d ' ' -f 1`
fi

function realpath { echo $(cd $(dirname $1); pwd)/$(basename $1); }

ENV_LIST=`realpath env.list`

cat >$ENV_LIST <<EOF
<%= env_list %>
PUBLIC_IP=$PUBLIC_IP
EOF

docker run \
       --detach=true \
       --name=icecast \
       --env-file=$ENV_LIST \
       --expose=8000 \
       --publish=<%= port %>:8000 \
       --restart=unless-stopped \
       --volume=$STORAGE:/share \
       branch14/icecast2


# callback to slack -- for debugging only
CLIENT_TOKEN=<%= client_token %>
TEXT="Started Icebox on $PUBLIC_IP with client token $CLIENT_TOKEN"
JSON='{"channel":"@phil","text":"'$TEXT'","icon_emoji":":mushroom:","username":"icecast"}'

curl -X POST -H 'Content-type: application/json' --data "$JSON" \
     https://hooks.slack.com/services/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
