# /home/rails/nginx-rtmp/nginx-run/conf/nginx.conf

worker_processes  1;

error_log logs/error.log debug;

events {
    worker_connections 1024;
}

# location ~/([a-zA-Z0-9\.\-]*)/* {
#     set $match "$1::$http_referer";
#     if ($match !~* ^(.+)::http[s]*://[www]*[.]*\1.*$ ) {
#         return 403;
#     }
# }

# application myapp {
#   live on;
#   record all;
#   record_path /tmp/rec;
#   record_unique on;
#   record_interval 30s;
#   exec_record_done ffmpeg -i $path -c copy /var/videos/$basename.mp4;
# }

# exec ffmpeg -i rtmp://localhost/myapp/$name
#             -c copy -f flv rtmp://localhost/app2/$name;

rtmp {
    server {
        listen 1935;

        # authentication (needs an absolute url)
        #on_connect http://0.0.0.0:8080/rtmpauth;
        on_connect http://0.0.0.0:3000/rtmpauth;

        application discussions {
            live on;

            #record keyframes;
            #record_path /tmp;
            #record_max_size 128K;
            #record_interval 30s;
            #record_suffix .this.is.flv;

            #on_publish http://localhost:8080/publish;
            #on_play http://localhost:8080/play;
            #on_record_done http://localhost:8080/record_done;
        }

        application recordings {
            live on;
            record audio;
            record_path /home/rails/recordings;
            record_unique on;
            record_max_size 100M;
        }
    }
}

http {
    server {
        listen      8080;

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root /home/rails/nginx-rtmp/nginx-rtmp-module/;
        }

        location /index.html { root /home/rails/nginx-rtmp/nginx-run/html/kluuu/; }
        location /swfobject.js { root /home/rails/nginx-rtmp/nginx-run/html/kluuu/; }
        location /Room.swf { root /home/rails/nginx-rtmp/nginx-run/html/kluuu/; }

        location /control {
            rtmp_control all;
        }

        # dummy auth
        location /rtmpauth {
            if ($arg_flashver != "LNX 11,2,202,310") {
              rewrite ^.*$ fallback? permanent;
            }
            return 200;
        }
    }
}
