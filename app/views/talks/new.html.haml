= javascript_include_tag 'sencha'

- content_for :title do
  = t('.title')

-# TODO:
-#     [] Until there's progress, show an infinite progress (back and forth)
-#     [] When in Talk#edit, trigger override automatically. User might not save the talk so that the callback does not trigger.
-#     [] Create s3 buckets for development and live. set cors, permissions and acl statements.
-#     [] Create HIDDEN REQUIRED field as long as the upload is running
-#     [] Create Required fields. Or better use Angular models.
-# 1.  [x] Create UUID in View
-# 1b. [x]  Upload file directly to S3
-# 1c. [] On submit, validate form to have Upload % == 0 or % == 100
-# 1d. [x] Submit form with UUID and save in Rails model
-# 2.  [x] On after_save, co-relate UUIDs and start override
-# 2b. [] When override is done, write to user that her talk is processed
-# 3.  [] Get rid of old UUID uploads (because forms have never submitted)

= simple_form_for([@venue, @talk], url: nil,
  html: {'ng-submit' => 'saveTalk()',
    'ng-controller' => 'UploadCtrl',
    name: "talkForm",
    novalidate: false}) do |f|
  = render partial: "fields", locals: { f: f, form_title: t('.new_talk') }

  .form-save-row.row
    .medium-12.columns
      = f.button :submit, class: 'button-vr', 'ng-disabled' => '!talkForm.$valid'
      = link_to t('.cancel'), @venue

