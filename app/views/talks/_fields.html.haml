.header-block(style="background-image: url(#{f.object.image.url})"
  data-show-upload="#talk_image,#venue_talks_attributes_0_image")

  .form-top-box.row
    .medium-10.medium-offset-1.columns
      %h2.form-title= form_title

      -#= f.error_messages

      - opts = {}
      - # TODO some fields are protected after state prelive, add this to cancan
      - opts[:disabled] = true unless f.object.prelive?

      = f.input :title, placeholder: t('.required'),
        input_html: { 'ng-model' => "talk.title", 'ng-required' => 'true' }
      = f.input :teaser, placeholder: t('.teaser')
      -# tag_list cannot be protected by angular, because ng-require will
      -# destroy the autocomplete tagging field
      = f.input :tag_list, input_html: { class: 'tagList' }
      = f.input :language, as: :grouped_select, collection: Talk::LANGUAGES,
        input_html: { class: 'languageSelect' },
        group_method: :last, label_method: :last, value_method: :first

      %br
      %br
      -#testdatepicker
      .date-time-picker-row.row.collapse
        .medium-5.columns
          -# NOTE: Datepicker and Timepicker fields cannot be protected by
          -# Angular, because NG will kill the jQuery UI elements
          = f.input :starts_at_date, opts.merge(input_html: {'data-picker' => 'date', 'required' => 'true' }, placeholder: t('.required'))
        .medium-4.columns
          = f.input :starts_at_time, opts.merge(input_html: {'data-picker' => 'time', 'required' => 'true'}, placeholder: t('.required'))
        .medium-3.columns
          = f.input :duration, opts.merge(collection: Settings.durations)
      .row.collapse
        .medium-12.columns
          %button.button-standard(type="button" data-trigger-file-input="talk_image")
            = t('.select_image')
          = f.file_field :image, as: :file, class: 'display-none'


      -# BEGIN: AngularJS File upload
      = f.input :user_override_uuid, as: :hidden
      %input{"ng-model" => "myModelObj", :type => "text"}/
      -# Single file upload
      %label{:class => "file optional"}
        = t('.audio_upload')
      %input{:accept => "audio/*", "ng-file-select" => "onFileSelect($files)", :type => "file"}/
      -# Multiple file upload
      -#%input{:accept => "image/*", :multiple => "multiple", "ng-file-select" => "onFileSelect($files)", :type => "file"}/
      -#.button{"data-multiple" => "true", "ng-file-select" => "onFileSelect($files)"}
      %div{"ng-file-drag-over-class" => "optional-css-class-name-or-function", "ng-file-drop" => "onFileSelect($files)", "ng-show" => "dropSupported"}
        = t('.drop_files_here')
      %div{"ng-file-drop-available" => "dropSupported=true", "ng-show" => "!dropSupported"}
        = t('.drop_file_not_supported')
      .progress
        %span.meter
          0%
      -# Currently this would submit the form. Further investigation would be required.
      -#%button{"ng-click" => "upload.abort()"} Cancel Upload
      -# END: AngularJS File upload

.row
  .medium-12.columns
    %br
    = f.input :guest_list, opts.merge(input_html: { class: 'guestList' })
    %br
    %br
    %label(for="venue_description")
      = t('.talks_description')
    = f.text_area :description, required: true, class: 'ckeditor', input_html: { ckeditor: { toolbar: 'Full' } }
    - messages = f.object.errors.get(:description)
    - unless messages.empty?
      %small.error= messages * ', '
    %br
    = f.input :collect, label: t('.record')


:javascript
  window.talk_uuid = "#{SecureRandom.uuid}";
  window.talk_upload_url = "#{@presigned_s3_post_url}"
