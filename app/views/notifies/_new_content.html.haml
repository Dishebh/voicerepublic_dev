%article.notification.news-notification.news-notification-new-content.contribution{:id => "notification-#{notification.id}"}
  .contribution-left
    - if notification.other && notification.other.instance_of?(User)
      = link_to user_path(:id => notification.other) do
        = image_tag( notification.other.account.portrait.url(:thumb), :class => 'img-polaroid')
    - if notification.other && notification.other.instance_of?(Venue)
      = link_to user_path(:id => notification.other) do
        = image_tag( notification.other.host_kluuu.user.account.portrait.url(:thumb), :class => 'img-polaroid')

  .contribution-right        
    - if notification.instance_of?(Notification::NewStatus)
      = link_to notification.other.name, user_path(:id => notification.other)
      = t('.created_new_status_update')
      \:
      = link_to_url_for_notification_reason(notification) do
        = limit_words(notification.content, 40)
    - if notification.instance_of?(Notification::NewKluuu)
      = link_to notification.other.name, user_path(:id => notification.other)
      = t('.created_new')
      = klu_type_string(notification.klu)
      \:
      = link_to_url_for_notification_reason(notification) do
        = tiny_klu(notification.klu)
    - if notification.instance_of?(Notification::NewVenue)
      = t('.new_venue_created')
      \:
      \&nbsp;#{link_to notification.other.title, venue_path(:id => notification.other)}
    = link_to_url_for_notification_reason(notification)

    .contribution-actions
      - if can? :manage, notification
        = link_to delete_notification_path(:notification_id => notification), :method => :delete, :remote => true do
          = t('destroy')