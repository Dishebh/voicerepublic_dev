-# STATUS ON TOP
%article.contribution.status
  - if user.status_updates.empty?
    = render(:partial => 'users/no_status_updates', :locals => { :user => user })
  - else
    - status_update = user.status_updates.limit(1).first
    %header
      %h4= t('.opinion')
      %time{:datetime => status_update.created_at.strftime("%Y-%m-%d")}
        = time_ago_in_words(status_update.created_at)
    = simple_format(status_update.content)

    -# NICE TO HAVE
      %form
        %label
        %input
        %submit{:value => 'submit', :class => 'btn btn-small'}
          = 'post'

    %aside.contribution-actions
      - if current_user && current_user == user   
        = link_to new_user_status_update_path(:user_id => user), :class => "btn btn-mini user-new-status" do
          %i.icon-edit
          = t('.new_status_update')       
      = link_to(user_status_update_path(:user_id => status_update.user, :id => status_update, :anchor => "comments")) do
        %i.icon-comment
        = pluralize(status_update.comments.count, t('.comment', :default => 'Comment') )

      - if current_user && current_user == user   
        = link_to user_status_update_path(:user_id => status_update.user, :id => status_update), :method => :delete, :class => "contribution-delete" do
          =t('helpers.links.destroy').downcase
      - else
        = link_to(user_status_update_path(:user_id => status_update.user, :id => status_update, :anchor => "newcomment")) do
          \&middot;
          = t('.add_comment')
