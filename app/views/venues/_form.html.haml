= simple_form_for @venue do |f|
  
  .header-block(style="background-image: url(#{@venue.image.url(:medium)})" data-show-upload="venue_image")

    .row
      .large-8.medium-8.large-centered.medium-centered.columns
        %h2= form_title
    .row
      .large-8.medium-8.large-centered.medium-centered.columns
        = f.error_notification
    .row
      .large-8.medium-8.large-centered.medium-centered.columns
        = f.text_field :title, placeholder: t('.title')
        = f.text_area :teaser, :rows => 2, placeholder: t('.teaser')         
        = f.text_area :description, :rows => 4, placeholder: t('.description')
        = f.text_field :tag_list, :class => 'tagList', placeholder: t('.tag_list')
        = f.file_field :image

    -# .event-box.clearfix
    -#   - if upcoming_events.any?
    -#     %header.event-header
    -#       %h2= t('.your_talk')
    -#     = f.fields_for :events, upcoming_events do |ef|
    -#       = render 'venues/event_fields', :ef => ef
    -# FIXME event is now called talk


  %hr
  - if @venue.new_record?
    .row
      .large-10.medium-10.large-centered.medium-centered.columns
        %h2= t('.your_talk')
        - talk = @venue.talks.first || @venue.talks.build
        = f.fields_for :talks, talk do |n|
          = render 'talks/fields', :f => n
        = f.submit nil, :class => 'button'
        = link_to t('.cancel', :default => t("helpers.links.cancel")),
          (@venue.persisted? ? venue_path(@venue) : venues_path)

  .row
    .large-12.panel.callout.radius
      = render "venues/txt/venue_desc"